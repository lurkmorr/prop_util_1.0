{"version":3,"sources":["logo.svg","components/propUtil/NUI.js","components/propUtil/Alert.jsx","components/propUtil/prompt.jsx","components/propUtil/propUtil.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","removeListener","array","func","index","indexOf","splice","NUI","events","keysDown","keysUp","addKeyDownListener","key","push","removeKeyDownListener","addKeyUpListener","removeKeyUpListener","addMessageListener","event","removeMessageListener","void_post","rsc","data","axios","post","then","catch","Promise","resolve","reject","error","initListeners","console","log","window","addEventListener","payload","arr","forEach","el","Alert","state","display","text","buildText","prop","JSON","stringify","show","setState","hide","inst","this","className","onClick","disabled","defaultValue","Component","undefined","boneList","name","id","Prompt","handleExit","inputRef","current","value","selectRef","props","setPromptVisible","handleOk","input","select","bone","React","createRef","ref","map","type","PropUtil","selected","spawnedProps","pos","x","y","z","rot","model","handleOpen","dispaly","setSelected","r","showPrompt","showAlert","removeProp","updatePos","d","updateRot","dictRef","animRef","playAnim","anim","dict","stopAnim","toLowerCase","Object","entries","step","min","max","onChange","target","App","promptVisible","setAlertVisible","alertVisible","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2dbcfaa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\r\n\r\nconst removeListener = (array, func) => {\r\n    if(array) {\r\n        const index = array.indexOf(func)\r\n        if(index !== -1) {\r\n            array.splice(index, 1)\r\n        }\r\n    }\r\n}\r\n\r\nexport default class NUI {\r\n    static events = {}\r\n    static keysDown = {}\r\n    static keysUp = {}\r\n\r\n    static addKeyDownListener = (key, func) => {\r\n        NUI.keysDown[key] = NUI.keysDown[key] || []\r\n        NUI.keysDown[key].push(func)\r\n    }\r\n\r\n    static removeKeyDownListener = (key, func) => {\r\n        removeListener(NUI.keysDown[key], func)\r\n    }\r\n\r\n    static addKeyUpListener = (key, func) => {\r\n        NUI.keysUp[key] = NUI.keysUp[key] || []\r\n        NUI.keysUp[key].push(func)\r\n    }\r\n\r\n    static removeKeyUpListener = (key, func) => {\r\n        removeListener(NUI.keysUp[key], func)\r\n    }\r\n\r\n    static addMessageListener = (event, func) => {\r\n        NUI.events[event] = NUI.events[event] || []\r\n        NUI.events[event].push(func)\r\n    }\r\n\r\n    static removeMessageListener = (event, func) => {\r\n        removeListener(NUI.events[event], func)\r\n    }\r\n\r\n    static void_post = ({event = '', rsc = 'vrp', data = {}}) => {\r\n        axios.post(`https://${rsc}/${event}`, data).then().catch()\r\n    }\r\n\r\n    static post = ({event = '', rsc = 'vrp', data = {}}) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.post(`https://${rsc}/${event}`, data).then(({data}) => {\r\n                resolve(data)\r\n            }).catch(error => {reject(error)})\r\n        })\r\n    }\r\n\r\n    static initListeners = () => {\r\n        console.log('NUI listeners are SET')\r\n        window.addEventListener('message', ({data}) => {\r\n            const {event, payload} = data\r\n            if(event === 'keydown' || event === 'keyup') {\r\n                const {key} = payload\r\n                const arr = event === 'keydown' ? 'keysDown' : 'keysUp'\r\n                if(NUI[arr][key]) {\r\n                    NUI[arr][key].forEach(el => {\r\n                        el()\r\n                    })\r\n                }\r\n            }else if(NUI.events[event]) {\r\n                NUI.events[event].forEach(el => {\r\n                    el(payload)\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// NUI.addMessageListener('test', (d) => {\r\n//     console.log(JSON.stringify(d)) -- json only to watch\r\n// })\r\n\r\n// NUI.addKeyDownListener(51, () => {\r\n//     NUI.post({event : 'test', rsc : 'ui', data : {test : 'true'}}).then(r => {\r\n//         console.log(JSON.stringify(r)) -- json only to watch\r\n//     })\r\n// })\r\n// NUI.addKeyUpListener(51, () => {\r\n// })","import React, {Component} from 'react';\r\nimport {RiCloseLine} from \"react-icons/all\";\r\n\r\nclass Alert extends Component {\r\n\r\n    static inst = undefined\r\n\r\n    state = {\r\n        display : false,\r\n        text : '123123'\r\n    }\r\n\r\n    componentDidMount() {\r\n        Alert.inst = this\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        delete Alert.inst\r\n    }\r\n\r\n    buildText = (prop) => {\r\n        return JSON.stringify(prop, null, 2)\r\n    }\r\n\r\n    show = (prop) => {\r\n        console.log('showAlert')\r\n        this.setState({display : true, text : this.buildText(prop)})\r\n    }\r\n\r\n    hide = () => {\r\n        this.setState({display:false})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.display){\r\n            return (\r\n                <div className={'alert-wrapper'}>\r\n                    <header>\r\n                        <div className=\"title-wrapper\">\r\n                            <div className=\"title\"><span>Copy Text</span></div>\r\n                            <div className=\"top-left-corner\"/>\r\n                        </div>\r\n                        <div className=\"exit\" onClick={this.hide}>\r\n                            <RiCloseLine/>\r\n                        </div>\r\n                    </header>\r\n                    <textarea disabled={true} defaultValue={this.state.text}/>\r\n                </div>\r\n            );\r\n        }else return ''\r\n    }\r\n}\r\n\r\nexport default Alert;","import React, {Component} from 'react';\r\nimport {RiCloseLine} from \"react-icons/all\";\r\nimport NUI from \"./NUI\";\r\n\r\nconst boneList = [\r\n    {\r\n        name: \"Spine 1\",\r\n        id: 24816,\r\n    },\r\n    {\r\n        name: \"Spine 2\",\r\n        id: 24817,\r\n    },\r\n    {\r\n        name: \"Spine 3 (default)\",\r\n        id: 24818,\r\n    },\r\n    {\r\n        name: \"Head\",\r\n        id: 31086,\r\n    },\r\n    {\r\n        name: \"Right Hand\",\r\n        id: 57005,\r\n    },\r\n    {\r\n        name: \"Right Thumb Finger\",\r\n        id: 58866,\r\n    },\r\n    {\r\n        name: \"Right Index Finger\",\r\n        id: 58867,\r\n    },\r\n    {\r\n        name: \"Right Middle Finger\",\r\n        id: 58868,\r\n    },\r\n    {\r\n        name: \"Right Ring Finger\",\r\n        id: 58869,\r\n    },\r\n    {\r\n        name: \"Right Small Finger\",\r\n        id: 58870,\r\n    },\r\n    {\r\n        name: \"Right Foot\",\r\n        id: 52301,\r\n    },\r\n    {\r\n        name: \"Left Hand\",\r\n        id: 18905,\r\n    },\r\n    {\r\n        name: \"Left Thumb Finger\",\r\n        id: 26610,\r\n    },\r\n    {\r\n        name: \"Left Index Finger\",\r\n        id: 26611,\r\n    },\r\n    {\r\n        name: \"Left Middle Finger\",\r\n        id: 26612,\r\n    },\r\n    {\r\n        name: \"Left Ring Finger\",\r\n        id: 26613,\r\n    },\r\n    {\r\n        name: \"Left Small Finger\",\r\n        id: 26614,\r\n    },\r\n    {\r\n        name: \"Left Foot\",\r\n        id: 14201,\r\n    },\r\n\r\n]\r\n\r\nclass Prompt extends Component {\r\n\r\n    state = {\r\n        display : false,\r\n        id : -1\r\n    }\r\n\r\n    static inst = undefined\r\n\r\n    componentDidMount() {\r\n        Prompt.inst = this\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        delete Prompt.inst\r\n    }\r\n\r\n    show = (id) => {\r\n        this.setState({display : true, id})\r\n    }\r\n\r\n    handleExit = () => {\r\n        this.inputRef.current.value = ''\r\n        this.selectRef.current.value = ''\r\n        this.setState({\r\n            id : -1,\r\n            display : false\r\n        })\r\n        this.props.setPromptVisible(false)\r\n    }\r\n\r\n    handleOk = () => {\r\n        const input = this.inputRef.current.value\r\n        const select = this.selectRef.current.value\r\n        NUI.void_post({rsc : 'prop_util', event : 'add_prop', data : {bone : select, prop : input, id : this.state.id}})\r\n        this.handleExit()\r\n    }\r\n\r\n    inputRef = React.createRef()\r\n    selectRef = React.createRef()\r\n\r\n    render() {\r\n        if(this.state.display) {\r\n            return (\r\n                <div className={'prompt'}>\r\n                    <div className=\"title-wrapper\">\r\n                        <div className=\"title\"><span>Choose Bone</span></div>\r\n                        <div className=\"exit\" onClick={this.handleExit}><div className=\"svg\"><RiCloseLine/></div></div>\r\n                    </div>\r\n                    <div className=\"select\">\r\n                        <select name=\"bones\" id=\"bones\" ref={this.selectRef}>\r\n                            {boneList.map(el =>\r\n                                <option value={el.id} key={el.id}>{el.name}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <div className=\"title\"><span>PropId</span></div>\r\n                        <input type=\"text\" ref={this.inputRef}/>\r\n                    </div>\r\n                    <div className=\"button\">\r\n                        <div className=\"ok\" onClick={this.handleOk}><span>OK</span></div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }else return ''\r\n    }\r\n}\r\n\r\nexport default Prompt;","import React, {Component} from 'react';\r\nimport { RiCloseLine, BsPlayFill, BsStopFill } from 'react-icons/all';\r\nimport './styles.scss'\r\nimport NUI from \"./NUI\";\r\nimport Alert from \"./Alert\";\r\nimport Prompt from \"./prompt\";\r\n\r\nlet id = 0\r\n\r\nclass PropUtil extends Component {\r\n\r\n    state = {\r\n        display : false,\r\n        selected : -1,\r\n        spawnedProps : [],\r\n        pos : {x : 1, y : 0, z : 0},\r\n        rot : {x : 0, y : 0, z : 0},\r\n        bone : -1,\r\n        model : -1,\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        NUI.addMessageListener('prop_created', ({id}) => {\r\n            let spawnedProps = this.state.spawnedProps\r\n            spawnedProps[id] = id\r\n            this.setState({spawnedProps})\r\n        })\r\n        NUI.addMessageListener('prop_deleted', ({id}) => {\r\n            let spawnedProps = this.state.spawnedProps\r\n            let index = spawnedProps.indexOf(id)\r\n            spawnedProps.splice(index, 1)\r\n            this.setState({spawnedProps})\r\n        })\r\n        NUI.addMessageListener('open', () => {\r\n            this.setState({display : true})\r\n        })\r\n        window.addEventListener('keyup', ({key}) => {\r\n            if(key.toLowerCase() === 'home') {\r\n                NUI.void_post({event : 'hide_mouse', rsc : 'prop_util'})\r\n            }\r\n        })\r\n    }\r\n\r\n    handleExit = () => {\r\n        this.setState({display : false})\r\n        NUI.void_post({event : 'close', rsc : 'prop_util'})\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({dispaly : true})\r\n    }\r\n\r\n\r\n    setSelected = (selected) => {\r\n        const id = this.state.spawnedProps[selected]\r\n        NUI.post({event : 'get_prop_data', rsc : 'prop_util', data : {id : id}}).then(r => {\r\n            this.setState({\r\n                selected, pos : r.pos , rot : r.rot, model : r.model, bone : r.bone\r\n            })\r\n        })\r\n    }\r\n\r\n    showPrompt = () => {\r\n        Prompt.inst.show(id++)\r\n    }\r\n\r\n    showAlert = () => {\r\n        const {pos, rot, bone, model} = this.state\r\n        Alert.inst.show({pos, rot, bone, model})\r\n    }\r\n\r\n    removeProp = () => {\r\n        const id = this.state.spawnedProps[this.state.selected]\r\n        NUI.void_post({rsc : 'prop_util', event : 'delete_prop', data : {id}})\r\n        this.setState({})\r\n    }\r\n\r\n    updatePos = (d, value) => {\r\n        let pos = this.state.pos\r\n        const id = this.state.spawnedProps[this.state.selected]\r\n        pos[d] = value\r\n        this.setState({\r\n            pos\r\n        })\r\n        NUI.void_post({rsc : 'prop_util', event : 'update_pos', data : {d:d,value, id}})\r\n    }\r\n\r\n    updateRot = (d, value) => {\r\n        let rot = this.state.rot\r\n        const id = this.state.spawnedProps[this.state.selected]\r\n        rot[d] = value\r\n        this.setState({\r\n            rot\r\n        })\r\n        NUI.void_post({rsc : 'prop_util', event : 'update_rot', data : {d:d,value,id}})\r\n    }\r\n\r\n    dictRef = React.createRef()\r\n    animRef = React.createRef()\r\n\r\n    playAnim = () => {\r\n        const anim = this.animRef.current.value\r\n        const dict = this.dictRef.current.value\r\n        if(dict && anim)\r\n            NUI.void_post({rsc : 'prop_util', event : 'play_anim', data : {dict, anim}})\r\n    }\r\n    stopAnim = () => {\r\n        NUI.void_post({rsc : 'prop_util', event : 'stop_anim'})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.display) {\r\n            const props = Object.entries(this.state.spawnedProps)\r\n            return (\r\n                <div className=\"all-wrapper\">\r\n                    <div className={'prop-util-wrapper'}>\r\n                        <header>\r\n                            <div className=\"title-wrapper\">\r\n                                <div className=\"title\"><span>Ped Decorator</span></div>\r\n                                <div className=\"top-left-corner\"/>\r\n                            </div>\r\n                            <div className=\"exit\" onClick={this.handleExit}><div className=\"svg\"><RiCloseLine/></div></div>\r\n                        </header>\r\n                        <main>\r\n                            <section className={'manage-objects'}>\r\n                                <div className=\"add-object\" onClick={this.showPrompt}><span>Add</span></div>\r\n                                <div className=\"remove-object\" onClick={this.removeProp}><span>Remove</span></div>\r\n                                <div className=\"print-object\" onClick={this.showAlert}><span>Print</span></div>\r\n                            </section>\r\n\r\n                            <section className=\"main\">\r\n                                <div className=\"left\">\r\n                                    <div className=\"title\"><span>Choose Object</span></div>\r\n                                    <div className=\"prop-list-wrapper\">\r\n                                        {props.map(el =>\r\n                                            <div className={`spawned-prop ${this.state.selected === el[0] ? 'selected' : ''}`} key={el[0]} onClick={()=>{this.setSelected(el[0])}}>\r\n                                                <div className=\"id-title\">\r\n                                                    <span>Id : {el[0]}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"right\">\r\n                                    <div className=\"title\"><span>Manage Object</span></div>\r\n                                    {this.state.selected !== -1 &&\r\n                                    <div className=\"prop-state-wrapper\">\r\n                                        {Object.entries(this.state.pos).map(el =>\r\n                                            <div key={el[0]} className={'prop-state'}>\r\n                                                <div className=\"prop-state-title-wrapper\">\r\n                                                    <div className=\"prop-state-title\">\r\n                                                        <span>Pos {el[0]}</span>\r\n                                                    </div>\r\n                                                    <div className=\"prop-state-value\">\r\n                                                        <span>{el[1]}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"prop-state-input\">\r\n                                                    <input\r\n                                                        type=\"range\"\r\n                                                        value={el[1]}\r\n                                                        step={0.001}\r\n                                                        min={-2}\r\n                                                        max={2}\r\n                                                        onChange={({target})=>{this.updatePos(el[0], target.value)}}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        {Object.entries(this.state.rot).map(el =>\r\n                                            <div key={el[0]} className={'prop-state'}>\r\n                                                <div className=\"prop-state-title-wrapper\">\r\n                                                    <div className=\"prop-state-title\">\r\n                                                        <span>Rot {el[0]}</span>\r\n                                                    </div>\r\n                                                    <div className=\"prop-state-value\">\r\n                                                        <span>{el[1]}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"prop-state-input\">\r\n                                                    <input\r\n                                                        type=\"range\"\r\n                                                        value={el[1]}\r\n                                                        step={0.1}\r\n                                                        min={0}\r\n                                                        max={360}\r\n                                                        onChange={({target})=>{this.updateRot(el[0], target.value)}}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n\r\n                                        {/*<InputRange changeValue={(value) => {*/}\r\n                                        {/*    this.updatePos('x', value)*/}\r\n                                        {/*}} selected={this.state.selected} title={'Pos X'} step={0.001} min={-2} max={2}/>*/}\r\n                                        {/*<InputRange changeValue={(value) => {*/}\r\n                                        {/*    this.updatePos('y', value)*/}\r\n                                        {/*}} selected={this.state.selected} title={'Pos Y'} step={0.001} min={-2} max={2}/>*/}\r\n                                        {/*<InputRange changeValue={(value) => {*/}\r\n                                        {/*    this.updatePos('z', value)*/}\r\n                                        {/*}} selected={this.state.selected} title={'Pos Z'} step={0.001} min={-2} max={2}/>*/}\r\n                                        {/*<InputRange changeValue={(value) => {*/}\r\n                                        {/*    this.updateRot('x', value)*/}\r\n                                        {/*}} selected={this.state.selected} title={'Rot X'} step={0.1} min={0} max={360}/>*/}\r\n                                        {/*<InputRange changeValue={(value) => {*/}\r\n                                        {/*    this.updateRot('y', value)*/}\r\n                                        {/*}} selected={this.state.selected} title={'Rot Y'} step={0.1} min={0} max={360}/>*/}\r\n                                        {/*<InputRange changeValue={(value) => {*/}\r\n                                        {/*    this.updateRot('z', value)*/}\r\n                                        {/*}} selected={this.state.selected} title={'Rot Z'} step={0.1} min={0} max={360}/>*/}\r\n                                    </div>\r\n                                    }\r\n                                </div>\r\n                            </section>\r\n                            <section className=\"anim-wrapper\">\r\n                                <div className=\"anim-title\"><span>Play Anim</span></div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"dict\">\r\n                                        <div className=\"title\"><span>Dict</span></div>\r\n                                        <input type=\"text\" ref={this.dictRef}/>\r\n                                    </div>\r\n                                    <div className=\"anim\">\r\n                                        <div className=\"title\"><span>Anim</span></div>\r\n                                        <input type=\"text\" ref={this.animRef}/>\r\n                                    </div>\r\n                                    <div className=\"buttons\">\r\n                                        <div className=\"svg\" onClick={this.playAnim}><BsPlayFill/></div>\r\n                                        <div className=\"svg\" onClick={this.stopAnim}><BsStopFill/></div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </main>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }else return ''\r\n    }\r\n}\r\n\r\nclass InputRange extends Component {\r\n\r\n    state = {}\r\n\r\n    componentDidMount() {\r\n        this.setState(this.props)\r\n    }\r\n\r\n    onInput = () => {\r\n        const value = this.ref.current.value\r\n        this.setState({\r\n            value\r\n        })\r\n        this.state.changeValue(value)\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    render() {\r\n        return (\r\n            <div className={'prop-state'}>\r\n                <div className=\"prop-state-title-wrapper\">\r\n                    <div className=\"prop-state-title\">\r\n                        <span>{this.state.title}</span>\r\n                    </div>\r\n                    <div className=\"prop-state-value\">\r\n                        <span>{this.state.value}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"prop-state-input\">\r\n                    <input\r\n                        ref={this.ref}\r\n                        type=\"range\"\r\n                        defaultValue={0}\r\n                        step={this.state.step}\r\n                        min={this.state.min}\r\n                        max={this.state.max}\r\n                        onInput={this.onInput}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PropUtil;","import logo from './logo.svg';\nimport React from \"react\";\nimport './App.scss';\nimport PropUtil from \"./components/propUtil/propUtil\";\nimport Prompt from \"./components/propUtil/prompt\";\nimport Alert from \"./components/propUtil/Alert\";\nimport NUI from './components/propUtil/NUI'\n\nclass App extends React.Component {\n\n    setPromptVisible = (promptVisible) => {\n        this.setState({\n            promptVisible\n        })\n    }\n\n    setAlertVisible = (alertVisible) => {\n        this.setState({alertVisible})\n    }\n\n    state = {\n        promptVisible : false,\n        alertVisible : false\n    }\n\n    componentDidMount() {\n        NUI.initListeners()\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <PropUtil setAlertVisible={this.setAlertVisible} setPromptVisible={this.setPromptVisible}/>\n                <Prompt display={this.state.promptVisible} setPromptVisible={this.setPromptVisible}/>\n                <Alert display={this.state.alertVisible} setAlertVisible={this.setAlertVisible}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}